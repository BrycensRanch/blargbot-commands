{//;function to get info for a channel from discord's API}
{function;chaninfo;{jget;{request;https://discord.com/api/channels/{if;{params;0};==;{null};{channelid};{channelid;{params;0}}};{get;@bot.sh.get}};body}}

{//;function for distro colors}
{function;distrocolors;
{switch;{lower;{params;0}};["debian"];CE0056;
["ubuntu"];E95420;
["xubuntu"];0044AA;
["ubuntu mate","ubuntu-mate","ubuntumate","mate"];87A556;
["kubuntu"];0077c4;
["kde neon","kde-neon","kdeneon","neon"];3DC08D;
["arch"];1793D1;
["gentoo"];7A5ADA;
["opensuse"];73ba25;
["elementary","elementaryos"];8a715e;
["red hat","red-hat","redhat","rhel"];cb2026;
["manjaro"];34be5b;
["mint"];8bd83c;
["void"];478061;
["slackware"];7f93b4;
["antergos"];6a7ab9;
["solus"];5294e2;
["fedora"];3d65b9;
5865F2}
}

{//;function for discord linux colors}
{function;dlcolors;
{switch;{lower;{params;0}};
["black"];23272a;
["red"];ed4245;
["green"];57f287;
["yellow"];FEE75C;
["orange"];d2691e;
["blue"];5865f2;
["blurple"];5865f2;
["fuchsia"];eb459e;
["pink"];eb459e;
["cyan"];57f2d1;
["gray"];5c6166;
["brightblack"];3d4145;
["brightred"];dd6f71;
["brightgreen"];8dfcb0;
["brightyellow"];EBDC87;
["brightorange"];e68b49;
["brightblue"];8b93e8;
["brightblurple"];8b93e8;
["brightfuchsia"];dd78ae;
["brightpink"];dd78ae;
["brightcyan"];9ce2d3;
["brightgray"];92969b;
{randchoose;["23272a","ed4245","57f287","FEE75C","d2691e","5865f2","5865f2","eb459e","eb459e","57f2d1","5c6166","3d4145","dd6f71","8dfcb0","EBDC87","e68b49","8b93e8","8b93e8","dd78ae","dd78ae","9ce2d3","92969b"]}
}
}

{//;function to output a fake image}
{function;fakeimg;https://fakeimg.pl/{if;{params;1};!=;{null};{params;1};250}x{if;{params;2};!=;{null};{params;2};100}/2A2D30/?retina=1&text={params;0}&font=noto}

{//;function to get json from website using motyar}
{function;getjson;{jget;{split;{jget;{request;http://motyar.info/webscrapemaster/try/?url={uriencode;{params}}};body};<input{space}type};0}}

{//;function to turn HTML into markdown using pandoc}
{function;htmltomd;{set;!~syretia.body;{params;0}}{func.syretia;pandoc?t=markdown_strict&f=html}}

{//;function to get metadata using motyar}
{function;metadata;
{set;!~mraw;{func.motyar;{params;0};/meta}}
{set;!~melements;[]}
{set;!~mvalues;[]}
{for;~mi;0;<;{length;{jget;{get;~mraw};body}};{if;{jget;{get;~mraw};body.{get;~mi}.http-equiv};!=;;{push;~melements;{jget;{get;~mraw};body.{get;~mi}.http-equiv}}{push;~mvalues;{jget;{get;~mraw};body.{get;~mi}.content}}}{if;{jget;{get;~mraw};body.{get;~mi}.name};!=;;{push;~melements;{jget;{get;~mraw};body.{get;~mi}.name}}{push;~mvalues;{jget;{get;~mraw};body.{get;~mi}.content}}}{if;{jget;{get;~mraw};body.{get;~mi}.property};!=;;{push;~melements;{jget;{get;~mraw};body.{get;~mi}.property}}{push;~mvalues;{jget;{get;~mraw};body.{get;~mi}.content}}}{if;{jget;{get;~mraw};body.{get;~mi}.itemprop};!=;;{push;~melements;{jget;{get;~mraw};body.{get;~mi}.itemprop}}{push;~mvalues;{jget;{get;~mraw};body.{get;~mi}.content}}}}
{set;~mjson;{jset;;meta;;create}}
{for;~mI;0;<;{length;{get;~melements}};{jset;~mjson;meta.{get;~melements;{get;~mI}};{get;~mvalues;{get;~mI}};create}}
{jsonstringify;{get;~mjson}}
}

{//;function to get metadata using syretia.cf}
{function;metadata_sy;
{func.syretia;metadata?u={uriencode;{params;0}}}
}

{//;function to scrape sites using motyar}
{function;motyar;{set;!~motyarjson;{request;http://motyar.info/webscrapemaster/api?key={get;*motyarkey}&url={uriencode;{params;0}}&xpath={params;1}}}{if;{jget;~motyarjson;body.error.0};==;pass an valid API key;{set;*motyarkey;{jget;{split;{jget;{split;{func.rawhtml;https://ipinfo.io/{randchoose;["1.1.1.1","8.8.8.8"]}/geo};value="};1};"};0}}{set;!~motyarjson;{request;http://motyar.info/webscrapemaster/api?key={get;*motyarkey}&url={uriencode;{params;0}}&xpath={params;1}}}}{get;~motyarjson}}

{//;function to detect if correct prefix was used}
{function;prefixtest;
{switch;{guildid};
["96230004047740928","204061452707954688"];
{set;!~used.prefix;{jget;{regexmatch;{replace;{messagetext};./{space};};/^(\.\/|sudo\s|su\s|<)/i};0}}
{if;{get;~used.prefix};==;{null};
{return}}}
}

{//;function to get raw response from website using motyar's try page}
{function;rawhtml;{jget;{request;http://motyar.info/webscrapemaster/try/?url={uriencode;{params;0}}};body}}

{//;function that replicates built-in request, but through syretia.cf}
{function;req;
{if;{get;~req.raw};!=;true;
{set;!~req.raw;false}}
{set;!~url;{params;0}}
{if;{logic;||;{bool;{get;~url};==;{null}};{bool;{get;~url};startswith;`}};{throw;Missing required arguments {get;~url}}{return}}
{set;!~headers;{params;1}}
{if;{get;~headers};startswith;`;
{set;!~headers;}}
{set;!~method;{jget;~headers;method}}
{if;{logic;||;{bool;{get;~method};==;{null}};{bool;{get;~method};startswith;`}};
{set;!~method;GET}}
{jset;~headers;method;POST;c}
{set;!~body;{params;2;n}}
{if;{get;~body};startswith;`;
{set;!~body;}}
{jget;{request;https://syretia.cf/req?url={uriencode;{get;~url}}&x={get;~method}&raw={get;~req.raw}&f={get;~req.flags};{get;~headers};{get;~body}};body}
}

{//;function to output a search message while we wait for results}
{function;searchmsg;
{set;!~secolor;{jget;{params};color}}
{set;!~semsg;{jget;{params};message}}
{set;!~searchmsg;{output;{embed;{embedbuild;
color:{get;~secolor};
thumbnail.url:https://cdn.discordapp.com/emojis/478073442311077889.gif?size=20;
description:{get;~semsg}...;}}}}
}

{//;function to make requests to syretia.cf endpoints}
{function;syretia;{jset;~head;method;POST;c}{jset;~head;headers.user-agent;blargbot | guild: {guildid};c}{jget;{request;http://syretia.cf/{params;0};{get;~head};{get;~syretia.body}};body}}

{//;function to remove duplicates from an array}
{function;uniq;
{set;!~filter.ar;[]}{void;{filter;~ue;{if;{isarray;{params}};{params};{paramsarray}};{if;{indexof;{get;~filter.ar};{get;~ue}};==;-1;{push;~filter.ar;{get;~ue}}true;false}}}{jvalues;~filter.ar}}

{//;function to get user's color based on role color}
{function;usrclr;{set;!~usrclrrole;{jget;{filter;~usrclrf;{roles;{userid;{params;0};quiet};quiet};{bool;{rolecolor;{get;~usrclrf}};!=;000000}};0}}{if;{get;~usrclrrole};!=;;{rolecolor;{get;~usrclrrole};quiet};5865F2}}

{//;function to check if user is in guild}
{function;usercheck;{suppresslookup}{if;{params;0};==;;false;{switch;{userid;{params;0};quiet};{guildmembers};true;false}}}

{//;function to get matching query from wikipedia}
{function;wikiquery;{fallback;{params;0}}{lower;{jget;{request;https://api.datamuse.com/sug?v=enwiki&s={uriencode;{params}}&max=1};body.0.word}}{fallback}}